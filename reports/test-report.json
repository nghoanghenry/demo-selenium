{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-31T08:17:45.953Z",
    "end": "2025-07-31T08:18:21.929Z",
    "duration": 35976,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "478273ff-e342-43c4-aa3f-b0ee897af86c",
      "title": "",
      "fullFile": "C:\\demo-selenium\\tests\\mocha-data-driven.test.js",
      "file": "\\tests\\mocha-data-driven.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f3b937a-b06d-46da-b36f-b507ee04d151",
          "title": "🔐 Data-Driven Test - Multi-Browser Support",
          "fullFile": "C:\\demo-selenium\\tests\\mocha-data-driven.test.js",
          "file": "\\tests\\mocha-data-driven.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"🔐 Data-Driven Test - Multi-Browser Support\"",
              "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support \"before all\" hook in \"🔐 Data-Driven Test - Multi-Browser Support\"",
              "timedOut": false,
              "duration": 1044,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(testConfig.timeouts.setup);\nconsole.log(`\\n🚀 Starting test with ${testUsers.length} users`);\nconsole.log(`🌐 Browser: ${testConfig.browser}, Headless: ${testConfig.headless}`);\n\ndriver = await createDriver(testConfig.browser, testConfig.headless);\nconsole.log('✅ WebDriver initialized successfully');",
              "err": {},
              "uuid": "87fa56f8-6b65-47aa-8678-9b4ca57b8623",
              "parentUUID": "1f3b937a-b06d-46da-b36f-b507ee04d151",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"🔐 Data-Driven Test - Multi-Browser Support\"",
              "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support \"after all\" hook in \"🔐 Data-Driven Test - Multi-Browser Support\"",
              "timedOut": false,
              "duration": 49,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(testConfig.timeouts.setup);\nif (driver) {\n    await driver.quit();\n    console.log('✅ WebDriver closed successfully');\n}\nconsole.log(`\\n📊 Results: ${registeredUsers.length}/${testUsers.length} users registered successfully`);",
              "err": {},
              "uuid": "caf03dcf-cd8e-48f9-bb1b-9aaea29163c6",
              "parentUUID": "1f3b937a-b06d-46da-b36f-b507ee04d151",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"🔐 Data-Driven Test - Multi-Browser Support\"",
              "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support \"after each\" hook in \"🔐 Data-Driven Test - Multi-Browser Support\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.currentTest.state === 'failed' && driver) {\n    const testName = this.currentTest.title.replace(/[^a-zA-Z0-9]/g, '_');\n    await takeScreenshot(driver, testName);\n}",
              "err": {},
              "uuid": "fe5b26a7-63c4-41b9-919f-ed08530377f6",
              "parentUUID": "1f3b937a-b06d-46da-b36f-b507ee04d151",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3ce458a1-7f36-4c3d-b5d1-27e00eba4eb6",
              "title": "👤 User 1: Marjory Trantow",
              "fullFile": "C:\\demo-selenium\\tests\\mocha-data-driven.test.js",
              "file": "\\tests\\mocha-data-driven.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "✅ Register user: charlotte90@gmail.com",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 👤 User 1: Marjory Trantow ✅ Register user: charlotte90@gmail.com",
                  "timedOut": false,
                  "duration": 5996,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\nawait driver.get(testConfig.baseUrl);\n\n// Click Sign In\nconst signInBtn = await driver.wait(until.elementLocated(By.css('[data-test=\"nav-sign-in\"]')), testConfig.timeouts.elementWait);\nawait signInBtn.click();\n\n// Click Register link\nconst registerLink = await driver.wait(until.elementLocated(By.css('[data-test=\"register-link\"]')), testConfig.timeouts.elementWait);\nawait registerLink.click();\n\n// Fill registration form\nawait driver.wait(until.elementLocated(By.id('first_name')), testConfig.timeouts.elementWait);\n\nawait driver.findElement(By.id('first_name')).sendKeys(user.firstName);\nawait driver.findElement(By.id('last_name')).sendKeys(user.lastName);\nawait driver.findElement(By.id('dob')).sendKeys(user.dob);\nawait driver.findElement(By.id('street')).sendKeys(user.street);\nawait driver.findElement(By.id('postal_code')).sendKeys(user.postalCode);\nawait driver.findElement(By.id('city')).sendKeys(user.city);\nawait driver.findElement(By.id('state')).sendKeys(user.state);\n\n// Chọn country\nconst countrySelect = await driver.findElement(By.id('country'));\nawait countrySelect.findElement(By.css(`option[value=\"${user.country}\"]`)).click();\n\nawait driver.findElement(By.id('phone')).sendKeys(user.phone);\nawait driver.findElement(By.id('email')).sendKeys(user.email);\nawait driver.findElement(By.id('password')).sendKeys(user.password);\n\n// Submit form\nawait driver.findElement(By.css('button[type=\"submit\"]')).click();\n\ntry {\n    // Check successful redirect\n    await driver.wait(until.urlContains('/auth/login'), testConfig.timeouts.elementWait);\n    const currentUrl = await driver.getCurrentUrl();\n    expect(currentUrl).to.include('/auth/login');\n    \n    registeredUsers.push(user);\n    console.log(`✅ Registration successful: ${user.email}`);\n} catch (error) {\n    // Check if email already exists\n    try {\n        const errorElement = await driver.findElement(By.css('.alert-danger'));\n        const errorText = await errorElement.getText();\n        if (errorText.toLowerCase().includes('email')) {\n            console.log(`⚠️ Email already exists: ${user.email}`);\n            registeredUsers.push(user);\n            return; // Test still passes because email already exists\n        }\n    } catch (e) {\n        // If no error message found, throw original error\n    }\n    throw error;\n}",
                  "err": {},
                  "uuid": "424f68eb-e5dc-4c64-9b97-970fc0949016",
                  "parentUUID": "3ce458a1-7f36-4c3d-b5d1-27e00eba4eb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "🔐 Login user: charlotte90@gmail.com",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 👤 User 1: Marjory Trantow 🔐 Login user: charlotte90@gmail.com",
                  "timedOut": false,
                  "duration": 4971,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\n// Go to login page\nawait driver.get(`${testConfig.baseUrl}auth/login`);\n\n// Fill login information\nawait driver.findElement(By.id('email')).sendKeys(user.email);\nawait driver.findElement(By.id('password')).sendKeys(user.password);\n\n// Submit login\nawait driver.findElement(By.css('[data-test=\"login-submit\"]')).click();\n\n// Check successful login\nawait driver.wait(until.urlContains('/account'), testConfig.timeouts.elementWait);\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.include('/account');\n\nconsole.log(`✅ Login successful: ${user.email}`);\n\n// Logout\nawait driver.findElement(By.css('[data-test=\"nav-menu\"]')).click();\nawait driver.findElement(By.css('[data-test=\"nav-sign-out\"]')).click();",
                  "err": {},
                  "uuid": "dfeec1a2-9658-4ddc-85e5-4baf1afa5f47",
                  "parentUUID": "3ce458a1-7f36-4c3d-b5d1-27e00eba4eb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "👤 Verify user info: Marjory Trantow",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 👤 User 1: Marjory Trantow 👤 Verify user info: Marjory Trantow",
                  "timedOut": false,
                  "duration": 6543,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\n// Login again\nawait driver.get(`${testConfig.baseUrl}auth/login`);\n\nawait driver.findElement(By.id('email')).sendKeys(user.email);\nawait driver.findElement(By.id('password')).sendKeys(user.password);\nawait driver.findElement(By.css('[data-test=\"login-submit\"]')).click();\n\nawait driver.wait(until.urlContains('/account'), testConfig.timeouts.elementWait);\n\n// Check display name\nconst navMenu = await driver.findElement(By.css('[data-test=\"nav-menu\"]'));\nconst displayName = await navMenu.getText();\n\n// Check if name contains firstName or lastName\nconst nameCheck = displayName.toLowerCase().includes(user.firstName.toLowerCase()) || \n                displayName.toLowerCase().includes(user.lastName.toLowerCase());\n\nexpect(nameCheck, `Display name '${displayName}' should contain '${user.firstName}' or '${user.lastName}'`).to.be.true;\nconsole.log(`✅ User info correct: ${displayName}`);\n\n// Logout\nawait navMenu.click();\nawait driver.findElement(By.css('[data-test=\"nav-sign-out\"]')).click();",
                  "err": {},
                  "uuid": "a3eefbee-e5a0-4433-9d49-a00dd1721313",
                  "parentUUID": "3ce458a1-7f36-4c3d-b5d1-27e00eba4eb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "424f68eb-e5dc-4c64-9b97-970fc0949016",
                "dfeec1a2-9658-4ddc-85e5-4baf1afa5f47",
                "a3eefbee-e5a0-4433-9d49-a00dd1721313"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17510,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "5b66fbc4-9a6e-45fa-a306-90fa30fbbbdd",
              "title": "👤 User 2: Lauren Hamill",
              "fullFile": "C:\\demo-selenium\\tests\\mocha-data-driven.test.js",
              "file": "\\tests\\mocha-data-driven.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "✅ Register user: gerry44@yahoo.com",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 👤 User 2: Lauren Hamill ✅ Register user: gerry44@yahoo.com",
                  "timedOut": false,
                  "duration": 2948,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\nawait driver.get(testConfig.baseUrl);\n\n// Click Sign In\nconst signInBtn = await driver.wait(until.elementLocated(By.css('[data-test=\"nav-sign-in\"]')), testConfig.timeouts.elementWait);\nawait signInBtn.click();\n\n// Click Register link\nconst registerLink = await driver.wait(until.elementLocated(By.css('[data-test=\"register-link\"]')), testConfig.timeouts.elementWait);\nawait registerLink.click();\n\n// Fill registration form\nawait driver.wait(until.elementLocated(By.id('first_name')), testConfig.timeouts.elementWait);\n\nawait driver.findElement(By.id('first_name')).sendKeys(user.firstName);\nawait driver.findElement(By.id('last_name')).sendKeys(user.lastName);\nawait driver.findElement(By.id('dob')).sendKeys(user.dob);\nawait driver.findElement(By.id('street')).sendKeys(user.street);\nawait driver.findElement(By.id('postal_code')).sendKeys(user.postalCode);\nawait driver.findElement(By.id('city')).sendKeys(user.city);\nawait driver.findElement(By.id('state')).sendKeys(user.state);\n\n// Chọn country\nconst countrySelect = await driver.findElement(By.id('country'));\nawait countrySelect.findElement(By.css(`option[value=\"${user.country}\"]`)).click();\n\nawait driver.findElement(By.id('phone')).sendKeys(user.phone);\nawait driver.findElement(By.id('email')).sendKeys(user.email);\nawait driver.findElement(By.id('password')).sendKeys(user.password);\n\n// Submit form\nawait driver.findElement(By.css('button[type=\"submit\"]')).click();\n\ntry {\n    // Check successful redirect\n    await driver.wait(until.urlContains('/auth/login'), testConfig.timeouts.elementWait);\n    const currentUrl = await driver.getCurrentUrl();\n    expect(currentUrl).to.include('/auth/login');\n    \n    registeredUsers.push(user);\n    console.log(`✅ Registration successful: ${user.email}`);\n} catch (error) {\n    // Check if email already exists\n    try {\n        const errorElement = await driver.findElement(By.css('.alert-danger'));\n        const errorText = await errorElement.getText();\n        if (errorText.toLowerCase().includes('email')) {\n            console.log(`⚠️ Email already exists: ${user.email}`);\n            registeredUsers.push(user);\n            return; // Test still passes because email already exists\n        }\n    } catch (e) {\n        // If no error message found, throw original error\n    }\n    throw error;\n}",
                  "err": {},
                  "uuid": "689c3296-ec4c-4598-a545-403254ffc50e",
                  "parentUUID": "5b66fbc4-9a6e-45fa-a306-90fa30fbbbdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "🔐 Login user: gerry44@yahoo.com",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 👤 User 2: Lauren Hamill 🔐 Login user: gerry44@yahoo.com",
                  "timedOut": false,
                  "duration": 6069,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\n// Go to login page\nawait driver.get(`${testConfig.baseUrl}auth/login`);\n\n// Fill login information\nawait driver.findElement(By.id('email')).sendKeys(user.email);\nawait driver.findElement(By.id('password')).sendKeys(user.password);\n\n// Submit login\nawait driver.findElement(By.css('[data-test=\"login-submit\"]')).click();\n\n// Check successful login\nawait driver.wait(until.urlContains('/account'), testConfig.timeouts.elementWait);\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.include('/account');\n\nconsole.log(`✅ Login successful: ${user.email}`);\n\n// Logout\nawait driver.findElement(By.css('[data-test=\"nav-menu\"]')).click();\nawait driver.findElement(By.css('[data-test=\"nav-sign-out\"]')).click();",
                  "err": {},
                  "uuid": "d4e5eca8-54f1-4ad9-985c-47381621cbb8",
                  "parentUUID": "5b66fbc4-9a6e-45fa-a306-90fa30fbbbdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "👤 Verify user info: Lauren Hamill",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 👤 User 2: Lauren Hamill 👤 Verify user info: Lauren Hamill",
                  "timedOut": false,
                  "duration": 5497,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\n// Login again\nawait driver.get(`${testConfig.baseUrl}auth/login`);\n\nawait driver.findElement(By.id('email')).sendKeys(user.email);\nawait driver.findElement(By.id('password')).sendKeys(user.password);\nawait driver.findElement(By.css('[data-test=\"login-submit\"]')).click();\n\nawait driver.wait(until.urlContains('/account'), testConfig.timeouts.elementWait);\n\n// Check display name\nconst navMenu = await driver.findElement(By.css('[data-test=\"nav-menu\"]'));\nconst displayName = await navMenu.getText();\n\n// Check if name contains firstName or lastName\nconst nameCheck = displayName.toLowerCase().includes(user.firstName.toLowerCase()) || \n                displayName.toLowerCase().includes(user.lastName.toLowerCase());\n\nexpect(nameCheck, `Display name '${displayName}' should contain '${user.firstName}' or '${user.lastName}'`).to.be.true;\nconsole.log(`✅ User info correct: ${displayName}`);\n\n// Logout\nawait navMenu.click();\nawait driver.findElement(By.css('[data-test=\"nav-sign-out\"]')).click();",
                  "err": {},
                  "uuid": "283e22d6-2e9f-4c6d-8859-183eb51bc433",
                  "parentUUID": "5b66fbc4-9a6e-45fa-a306-90fa30fbbbdd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "689c3296-ec4c-4598-a545-403254ffc50e",
                "d4e5eca8-54f1-4ad9-985c-47381621cbb8",
                "283e22d6-2e9f-4c6d-8859-183eb51bc433"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14514,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "2f198d22-3a9b-4237-a1a3-8f7103524e56",
              "title": "🚫 Negative Test Cases",
              "fullFile": "C:\\demo-selenium\\tests\\mocha-data-driven.test.js",
              "file": "\\tests\\mocha-data-driven.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "❌ Register with invalid email",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 🚫 Negative Test Cases ❌ Register with invalid email",
                  "timedOut": false,
                  "duration": 542,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\nconst invalidUser = {\n    ...testUsers[0],\n    email: 'invalid-email-format'\n};\n\nawait driver.get(testConfig.baseUrl);\nawait driver.findElement(By.css('[data-test=\"nav-sign-in\"]')).click();\nawait driver.findElement(By.css('[data-test=\"register-link\"]')).click();\n\nawait driver.findElement(By.id('first_name')).sendKeys(invalidUser.firstName);\nawait driver.findElement(By.id('email')).sendKeys(invalidUser.email);\nawait driver.findElement(By.id('password')).sendKeys(invalidUser.password);\nawait driver.findElement(By.css('button[type=\"submit\"]')).click();\n\n// Should stay on register page\nconst currentUrl = await driver.getCurrentUrl();\nexpect(currentUrl).to.include('/register');",
                  "err": {},
                  "uuid": "ddac7cc7-9976-40fe-95e0-12250bd331e7",
                  "parentUUID": "2f198d22-3a9b-4237-a1a3-8f7103524e56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "❌ Login with wrong password",
                  "fullTitle": "🔐 Data-Driven Test - Multi-Browser Support 🚫 Negative Test Cases ❌ Login with wrong password",
                  "timedOut": false,
                  "duration": 2306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "this.timeout(testConfig.timeouts.testCase);\n\nif (registeredUsers.length === 0) {\n    this.skip('No users registered successfully');\n}\n\nconst user = registeredUsers[0];\n\nawait driver.get(`${testConfig.baseUrl}auth/login`);\nawait driver.findElement(By.id('email')).sendKeys(user.email);\nawait driver.findElement(By.id('password')).sendKeys('wrongpassword123');\nawait driver.findElement(By.css('[data-test=\"login-submit\"]')).click();\n\n// Check for error message\nconst errorElement = await driver.wait(until.elementLocated(By.css('.alert-danger')), testConfig.timeouts.elementWait);\nconst errorText = await errorElement.getText();\nexpect(errorText.toLowerCase()).to.include('invalid');",
                  "err": {},
                  "uuid": "dd9271ab-9467-49db-a50d-d8d08ed35149",
                  "parentUUID": "2f198d22-3a9b-4237-a1a3-8f7103524e56",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ddac7cc7-9976-40fe-95e0-12250bd331e7",
                "dd9271ab-9467-49db-a50d-d8d08ed35149"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2848,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 120000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportFilename": "test-report"
      },
      "version": "6.2.0"
    }
  }
}